services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: fireforget_accounting
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      interval: 30s
      timeout: 20s
      retries: 3

  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/fireforget_accounting
      REDIS_URL: redis://redis:6379/0
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: documents
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
      ENVIRONMENT: development
      USE_MOCK_DATA: ${USE_MOCK_DATA:-true}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: uvicorn src.app.main:app --host 0.0.0.0 --port 8000 --reload

  worker:
    build: .
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/fireforget_accounting
      REDIS_URL: redis://redis:6379/0
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: documents
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
      ENVIRONMENT: development
      USE_MOCK_DATA: ${USE_MOCK_DATA:-true}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: celery -A src.orchestrator.celery_app worker --loglevel=info

volumes:
  postgres_data:
  redis_data:
  minio_data:
